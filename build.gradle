buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories { // HINT : 각종 의존성들을 어떤 원격 저장소에서 받을지 정한다
        mavenCentral() // 기본적으로 mavenCentral을 많이 사용하지만 Lib 업로드 난이도로 인해, jcenter도 많이 사용
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// spring boot 개발을 하기 위한 필수 플러그인
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // HINT :  스프링 부트의 의존성들을 관리해주는 플러그인 -> 반드시 추가 필요

group 'com.aws.book'
version '1.0.4-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // version은 따로 기재하지 않음, 충돌 방지
    // ISSUE : https://velog.io/@g0709-19/Gradle-Could-not-find-method-compile-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok 라이브러리 추가, gradle이 4 버전 일때만 추가
    // implementation 'org.projectlombok:lombok'

    // gradle 이 버전 5 라면
    // https://anywaydevlog.tistory.com/102
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // h2 database
    runtimeOnly 'com.h2database:h2'

    // spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.6'

    // mustache template engine
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // spring security oauth2 client
    // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성
    // spring-security-oauth2-client와 spring-security-oauth2-jose 기본 관리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
